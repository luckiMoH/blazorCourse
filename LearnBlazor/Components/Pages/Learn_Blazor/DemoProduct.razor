@page "/learnBlazor/demoProduct"

<div class="row">
	<h2>Demo Product</h2>
	@foreach (var product in ProductList)
	{
		<div class="col-5 m-1 border p-1">
			<p class="text-primary fs-3">Product - @product.Id</p>
			<p>@product.Name</p>
			<p>Show Properties: <input type="checkbox" @bind="@product.IsActive"/></p>
			@if (product.IsActive)
			{
				@foreach (var prop in product.ProductProperties)
				{
					<p>@prop.Key : @prop.Value</p>
				}
			}
			<_DeleteButtonComponent ProductId="@product.Id"/>
		</div>
	}
</div>
<div class="row pt-4">
	<input type="button" class="btn btn-success" style="width: 100px" value="Counter" @onclick="()=> Increment(5)" />
	<p>Count: @Count</p>
</div>

@code {
	List<Product> ProductList = new();

	public int Count { get; set; } = 0;

	protected override void OnInitialized()
	{
		ProductList.Add(new()
			{
				Id = 1,
				Name = "Midnight Blaze",
				IsActive = false,
				Price = 5.99,
				ProductProperties = new List<Product_Prop>()
				{
					new Product_Prop { Id = 1, Key = "Flavor", Value = "Rose"},
					new Product_Prop { Id = 2, Key = "Size", Value = "20oz"},
					new Product_Prop { Id = 3, Key = "Color", Value="Purple" }
				}
			});

		ProductList.Add(new()
			{
				Id = 2,
				Name = "Blossom Lily",
				IsActive = true,
				Price = 10.59,
				ProductProperties = new List<Product_Prop>()
			{
				new Product_Prop { Id = 1, Key = "Flavor", Value = "Lily" },
				new Product_Prop { Id = 2, Key = "Size", Value = "18oz" },
				new Product_Prop {Id = 3,Key = "Color",Value = "White"}
			}
			});

		ProductList.Add(new()
			{
				Id = 3,
				Name = "Sunrise Tequila",
				IsActive = true,
				Price = 4.99,
				ProductProperties = new List<Product_Prop>()
				{
					new Product_Prop { Id = 1, Key = "Flavor", Value = "Orange"},
					new Product_Prop { Id = 2, Key = "Size", Value = "18oz"},
					new Product_Prop { Id = 3, Key = "Color", Value="Yellow" }
				}
			});
		ProductList.Add(new()
			{
				Id = 4,
				Name = "Sunrise Tequila",
				IsActive = true,
				Price = 4.99,
				ProductProperties = new List<Product_Prop>()
				{
					new Product_Prop { Id = 1, Key = "Flavor", Value = "Orange"},
					new Product_Prop { Id = 2, Key = "Size", Value = "18oz"},
					new Product_Prop { Id = 3, Key = "Color", Value="Yellow" }
				}
			});
		ProductList.Add(new()
			{
				Id = 5,
				Name = "Sunrise Tequila",
				IsActive = true,
				Price = 4.99,
				ProductProperties = new List<Product_Prop>()
				{
					new Product_Prop { Id = 1, Key = "Flavor", Value = "Orange"},
					new Product_Prop { Id = 2, Key = "Size", Value = "18oz"},
					new Product_Prop { Id = 3, Key = "Color", Value="Yellow" }
				}
			});
	}

	private void Increment(int counter)
	{
		Count += counter;
	}


	private void DeleteProductsByName(string productName)
	{
		var productsToRemove = ProductList.Where(p => p.Name == productName).ToList();

		foreach (var prod in productsToRemove)
		{
			ProductList.Remove(prod);
		}
	}
}
